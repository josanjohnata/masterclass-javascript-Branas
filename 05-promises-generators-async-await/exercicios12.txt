# Exercício 12

## Objetivo

Utilize async/await para tratar as chamadas para as promises.

## Instruções

1. Crie uma função utilizando async.
2. Invoque cada uma das funções execute utilizando await incluindo o Promise.all.
3. Envolva as chamadas em um bloco try/catch para tratar as exceções.
4. Após a execução de "create table", utilize a função Promise.all para executar os 3 comandos "insert".
5. Após a execução dos 3 comandos "insert", faça um select retornando as colunas "name" e "author".

## Resultado

[{
    "name": "Douglas Crockford",
    "age": "62"
}, {
    "name": "Linus Torvalds",
    "age": "47"
}, {
    "name": "Martin Fowler",
    "age": "54"
}]

## Conteúdo abordado neste exercício

- Async/Await
- Promises
- try/catch

Solução:

import Database from 'exercicios10-database.txt';

(async function() {
  try {
    const database = new Database();
    await database.execute("create table author (id number, name string, age number, city string, state string, country string)");
    await Promise.all([
      database.execute("insert into author (id, name, age) values (1, Douglas Crockford, 62)"),
      database.execute("insert into author (id, name, age) values (2, Linus Torvalds, 47)"),
      database.execute("insert into author (id, name, age) values (3, Martin Fowler, 54)"),
    ]);
    const result = await database.execute("select name, age from author");
    console.log(JSON.stringify(result, undefined ,"  "));
  } catch (e) {
    console.log(e.message);
  }
})();
